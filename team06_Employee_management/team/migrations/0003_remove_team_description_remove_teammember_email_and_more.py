# Generated by Django 5.1.5 on 2025-02-05 08:45

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('team', '0002_alter_team_description_teammember_delete_member'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='team',
            name='description',
        ),
        migrations.RemoveField(
            model_name='teammember',
            name='email',
        ),
        migrations.RemoveField(
            model_name='teammember',
            name='is_leader',
        ),
        migrations.RemoveField(
            model_name='teammember',
            name='role',
        ),
        migrations.AddField(
            model_name='team',
            name='team_identifier',
            field=models.CharField(default='default_team_id', max_length=100, unique=True),
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('employee_name', models.CharField(max_length=100)),
                ('employee_number', models.CharField(max_length=100, unique=True)),
                ('date_of_birth', models.DateField()),
                ('role', models.CharField(max_length=100)),
                ('management_level', models.CharField(max_length=100)),
                ('home_office', models.CharField(max_length=100)),
                ('team_identifier', models.CharField(default='default_team_id', max_length=100)),
                ('job_position', models.CharField(max_length=100)),
                ('pl_identifier', models.CharField(max_length=100)),
                ('manager_identifier', models.CharField(max_length=100)),
                ('profile_image', models.ImageField(blank=True, null=True, upload_to='profile_images/')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='team_customuser_set', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='team_customuser_set', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.AddField(
            model_name='teammember',
            name='user',
            field=models.ForeignKey(default='default_user_id', on_delete=django.db.models.deletion.CASCADE, to='team.customuser'),
        ),
    ]
